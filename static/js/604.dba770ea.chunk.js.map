{"version":3,"file":"static/js/604.dba770ea.chunk.js","mappings":"8QAOA,MAAMA,GAAmBC,EAAAA,EAAAA,IAAO,CAC9BC,UAAUC,EAAAA,EAAAA,MACPC,IAAI,EAAG,sDACPC,IAAI,GAAI,sDACRC,SAAS,0BAGC,SAASC,EAAMC,GAAmB,IAAlB,YAAEC,GAAaD,EAC5C,MAAME,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbZ,SAAU,IAEZF,iBAAkBA,EAClBe,SAAWC,IACTP,EAAYO,EAAOd,UACnBQ,EAAS,SAAS,IAItB,OACEO,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,OAAKK,IAAKC,EAAQC,IAAI,sDACtBJ,EAAAA,EAAAA,MAAA,QAAML,SAAUH,EAAOa,aAAaN,SAAA,EAClCF,EAAAA,EAAAA,KAACS,EAAAA,EAAS,CACRC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNC,QAAQ,WACRC,MAAOnB,EAAOI,OAAOd,SACrB8B,SAAUpB,EAAOqB,aACjBC,OAAQtB,EAAOuB,WACfC,MAAOxB,EAAOyB,QAAQnC,UAAYoC,QAAQ1B,EAAO2B,OAAOrC,UACxDsC,WAAY5B,EAAOyB,QAAQnC,UAAYU,EAAO2B,OAAOrC,YAEvDe,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACwB,EAAAA,EAAM,CACLC,MAAM,UACNZ,QAAQ,YACRa,KAAK,SACLC,KAAK,SAAQzB,SACd,kBAkBX,C","sources":["components/sign-in/sign-in.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\nimport \"./style.css\";\r\nimport { object,string } from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { TextField, Button } from \"@mui/material\";\r\nimport avatar from \"../../assets/images/avatar.png\"\r\n\r\nconst validationSchema = object({\r\n  username: string()\r\n    .min(4, \" username should be of minimum 4 characters length\")\r\n    .max(16, \"username should be of maximum 16 characters length\")\r\n    .required(\"username is required\"),\r\n});\r\n\r\nexport default function SignIn({ setUsername }) {\r\n  const navigate = useNavigate();\r\n  \r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      setUsername(values.username)\r\n      navigate(\"/books\")\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user-box\">\r\n        <img src={avatar} alt=\"Аватарка\" />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <TextField\r\n            id=\"username\"\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            variant=\"outlined\"\r\n            value={formik.values.username}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            error={formik.touched.username && Boolean(formik.errors.username)}\r\n            helperText={formik.touched.username && formik.errors.username}\r\n          />\r\n          <br />\r\n          <br />\r\n          <br />\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            type=\"submit\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      {/* <img src={avatar} alt=\"Аватарка\" />\r\n        <label class=\"text-label\" for=\"user\">\r\n          Username\r\n        </label>\r\n        <br />\r\n        <br />\r\n        <input class=\"field text\" type=\"text\" id=\"user\" placeholder=\"username\" />\r\n        <br />\r\n        <button class=\"field text\" type=\"submit\">\r\n          <Link to=\"/books\">Signin</Link>\r\n        </button> */}\r\n    </>\r\n  );\r\n}\r\n"],"names":["validationSchema","object","username","string","min","max","required","SignIn","_ref","setUsername","navigate","useNavigate","formik","useFormik","initialValues","onSubmit","values","_jsx","_Fragment","children","_jsxs","className","src","avatar","alt","handleSubmit","TextField","id","name","label","variant","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","Button","color","size","type"],"sourceRoot":""}