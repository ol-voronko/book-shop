{"version":3,"file":"static/js/436.eacfe00e.chunk.js","mappings":"2JAIA,MAWA,EAXwBA,KACpB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACfC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACDJ,GACDE,EAAS,UACb,GACD,CAACF,GAAU,C,+GCNH,SAASK,KACtBN,EAAAA,EAAAA,KAEA,MAAMO,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MACRC,EAAKC,OAAOL,EAAOI,IACnBE,EAAOJ,EAAMK,MAAMD,GAChBA,EAAKF,KAAOA,KAEf,MAAEI,EAAK,OAAEC,EAAM,MAAEC,EAAK,YAAEC,EAAW,MAAEC,EAAK,OAAEC,GAAWP,GAEtDQ,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GAU7BC,GAAaC,EAAAA,EAAAA,UAAQ,IAAMN,EAAQE,GAAO,CAACA,IAajD,OACEK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,IAAKZ,GAAOa,EAAeC,IAAI,iGAEpCH,EAAAA,EAAAA,KAAA,KAAAD,SAAIZ,KACJa,EAAAA,EAAAA,KAAA,KAAAD,SAAIX,KACJY,EAAAA,EAAAA,KAAA,KAAAD,SAAIT,KACJQ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAAD,SAAIR,KAGFS,EAAAA,EAAAA,KAAA,SAAOI,IAAI,QAAOL,SAAC,8DACnBC,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLC,QAASA,IAAMZ,EAASD,EAAQ,GAChCc,SAAUd,GAAS,EAAEM,SACtB,OAGDC,EAAAA,EAAAA,KAAA,SAAOjB,GAAG,QAAQyB,SA9BEC,IAC1B,MAAMC,EAAe1B,OAAOyB,EAAEE,OAAOC,OAEnClB,EADEgB,GAAgBlB,EACTA,EACAkB,GAAgB,IAAMA,EACtB,EAEAA,EACX,EAsBsDE,MAAOnB,KACvDO,EAAAA,EAAAA,KAAA,UACEK,KAAK,SACLC,QAASA,IAAMZ,EAASD,EAAQ,GAChCc,SAAUd,GAASD,EAAOO,SAC3B,OAIDC,EAAAA,EAAAA,KAAA,UACAF,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gBACWC,EAAAA,EAAAA,KAAA,QAAAD,SAAOH,QAErBI,EAAAA,EAAAA,KAAA,UAAAD,SAAS,gGAInB,C","sources":["components/context/useAuthRedirect.js","components/specific-book/specific-book.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"./useUser\";\r\n\r\nconst useAuthRedirect = () => {\r\n    const { username } = useUser();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!username) {\r\n            navigate(\"/signin\")\r\n        }\r\n    } ,[username])\r\n\r\n}\r\nexport default useAuthRedirect;","import { useParams } from \"react-router-dom\";\r\nimport { useBook } from \"../context/useBook\";\r\nimport { useState, useMemo } from \"react\";\r\nimport imageNotFound from \"../../assets/images/imageNotFound.png\"\r\nimport useAuthRedirect from \"../context/useAuthRedirect\";\r\n\r\nexport default function Book() {\r\n  useAuthRedirect();\r\n\r\n  const params = useParams();\r\n  const books = useBook();\r\n  const id = Number(params.id);\r\n  const book = books.find((book) => {\r\n    return book.id === id;\r\n  });\r\n  const { title, author, image, description, price, amount } = book;\r\n\r\n  const [count, setCount] = useState(1);\r\n\r\n  //   if (count <= 1) {\r\n  //     return 1;\r\n  //   } else if (count >= 42) {\r\n  //     return 42;\r\n  //   }\r\n\r\n  // });\r\n\r\n  const totalPrice = useMemo(() => price * count, [count]);\r\n\r\n  const changeCountHandler = (e) => {\r\n    const currentValue = Number(e.target.value);\r\n    if (currentValue >= amount) {\r\n      setCount(amount);\r\n    } else if (currentValue <= 1 || !currentValue) {\r\n      setCount(1);\r\n    } else {\r\n      setCount(currentValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img src={image||imageNotFound} alt=\"Обкладинка книги\" />\r\n\r\n      <p>{title}</p>\r\n      <p>{author}</p>\r\n      <p>{description}</p>\r\n      <div>\r\n        <p>{price}</p>\r\n\r\n       \r\n          <label for=\"count\"> Кількість:</label>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setCount(count - 1)}\r\n            disabled={count <= 1}\r\n          >\r\n            -\r\n          </button>\r\n          <input id=\"count\" onChange={changeCountHandler} value={count} />\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => setCount(count + 1)}\r\n            disabled={count >= amount}\r\n          >\r\n            +\r\n          </button>\r\n\r\n          <br />\r\n          <p>\r\n            Total price:<span>{totalPrice}</span>\r\n          </p>\r\n          <button >Додати до кошика</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["useAuthRedirect","username","useUser","navigate","useNavigate","useEffect","Book","params","useParams","books","useBook","id","Number","book","find","title","author","image","description","price","amount","count","setCount","useState","totalPrice","useMemo","_jsxs","children","_jsx","src","imageNotFound","alt","for","type","onClick","disabled","onChange","e","currentValue","target","value"],"sourceRoot":""}